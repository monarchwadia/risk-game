const e=(e,t)=>({x:e,y:t}),t=(e,t)=>({x:e.x-t.x,y:e.y-t.y}),r=(e,t,r)=>{for(let o=e;o<=t;o++)r(o)},o=e=>{if(0===e.length)return;const t=s(e.length-1);return void 0!==t?e[t]:void 0},s=e=>Math.floor(Math.random()*e);var n=e=>{0!==e.settings.entropy&&e.players.forEach((t=>{if(s(e.settings.entropy)>=t.cells.length/100)return;const r=t.cells.length,o=s(r);t.cells.splice(o,1)}))};class a{add(e,t,r){this.tree[e]||={},this.tree[e][t]=r}remove(e,t){this.tree[e]&&this.tree[t]&&(delete this.tree[e][t],Object.keys(this.tree[e]).length||delete this.tree[e])}get(e,t){if(this.has(e,t))return this.tree[e][t]}has(e,t){if(!Object.prototype.hasOwnProperty.call(this.tree,""+e))return!1;return!!Object.prototype.hasOwnProperty.call(this.tree[e],""+t)}modify(e,t,r){const o=r(this.get(e,t));void 0!==o&&this.add(e,t,o)}toArray(){const e=[];return Object.keys(this.tree).forEach((t=>{Object.keys(this.tree[t]).forEach((r=>{e.push({x:+t,y:+r,val:this.tree[t][r]})}))})),e}constructor(){this.tree={}}}var c=(t,o,s)=>{const n=new a;t.cells.forEach((e=>{r(-1,1,(t=>{r(-1,1,(r=>{n.add(e.x+t,e.y+r,!0)}))}))})),t.cells.forEach((e=>{n.remove(e.x,e.y)}));const c=n.toArray().filter((e=>!0===e.val)),l=new a;c.forEach((({x:t,y:r})=>{if(s.has(t,r)){const o=s.get(t,r);if(!o)return;l.add(t,r,{type:"ATTACK",targetCell:{coords:e(t,r),owner:o}})}else l.add(t,r,{type:"COLONIZE",targetCell:{coords:e(t,r)}})}));const i=l.toArray().map((e=>e.val));return i.push({type:"PASS"}),i};var l=e=>{const t=new a;e.players.forEach((e=>{e.cells.forEach((r=>{t.add(r.x,r.y,e)}))})),e.players.forEach((r=>{const o=c(r,e,t),s=r.ai({player:r,state:e,possibleMoves:o,occupiedCells:t});switch(s.type){case"ATTACK":s.targetCell.owner.cells=s.targetCell.owner.cells.filter((e=>e.x!==s.targetCell.coords.x||e.y!==s.targetCell.coords.y)),r.cells.push({x:s.targetCell.coords.x,y:s.targetCell.coords.y});break;case"COLONIZE":r.cells.push(s.targetCell.coords)}})),n(e)};const i=20,y=20;var h=({players:e,canvas:t})=>{const r=t.getContext("2d");r&&(r.fillStyle="black",r.font="20px Georgia",e.forEach(((e,t)=>{const o=i,s=y*(t+1);r?.fillText(`${e.color}: ${e.cells.length}`,o,s)})))};var d=({state:e})=>{const r=document.getElementById("canvas"),o=r.getContext("2d");o&&(e.players.forEach((r=>{r.cells.forEach((s=>{((e,r,o,s)=>{const{x:n,y:a}=t(r,s.origin);e.strokeStyle=o,e.fillStyle=o,e.fillRect(n*s.zoom,a*s.zoom,s.zoom-1,s.zoom-1)})(o,s,r.color,e.camera)}))})),h({canvas:r,players:e.players}))};var g=()=>{const e=document.getElementById("canvas");if(!e)return;const t=window.innerWidth,r=window.innerHeight;e.setAttribute("height",""+r),e.setAttribute("width",""+t)};var p=(e,r)=>{let o,s,n,a=!1;const c=document.getElementById("canvas");c.addEventListener("mousedown",(function(t){a=!0,s={x:t.clientX,y:t.clientY},n={...e.camera.origin}})),c.addEventListener("mousemove",(c=>{if(!a)return;const l={x:c.clientX,y:c.clientY},i=t(l,s);o=e.camera.origin,e.camera.origin=t(n,i),r()})),c.addEventListener("wheel",(t=>{const o=t;t.preventDefault();const s=0===o.deltaY?0:o.deltaY>0?1:-1;e.camera.zoom=Math.min(Math.max(e.camera.zoom+s,3),7),r()})),c.addEventListener("mouseup",(()=>{a=!1,o&&(e.camera.origin=o)}))};var u=({canvas:e})=>{e.getContext("2d")?.clearRect(0,0,e.width,e.height)};const v={ATTACK:1e3,COLONIZE:500,PASS:0};var f=({possibleMoves:e})=>{let t;const r=e.filter((e=>"ATTACK"===e.type||"COLONIZE"===e.type)).sort(((e,t)=>v[t.type]-v[e.type]));return t=r.length?o(r):o(e),t||(t={type:"PASS"}),t};var m=({possibleMoves:e})=>{let t;return t=o(e.filter((e=>"ATTACK"!==e.type))),t||(t={type:"PASS"}),t};const x={ATTACK:1e3,COLONIZE:500,PASS:0};class A{constructor(e){this.bucketSize=e,this.coordinateSet=new a}increment(e,t){const r=this.getBucketIndex({x:e,y:t});this.coordinateSet.modify(r.x,r.y,(e=>void 0===e?0:e+1))}getHighest(){const e=this.coordinateSet.toArray().sort((({val:e},{val:t})=>t-e));if(e.length)return e[0]}getScoreOfBucket(e){const{x:t,y:r}=this.getBucketIndex(e);return this.coordinateSet.get(t,r)}getBucketIndex(e){return{x:Math.floor(e.x/this.bucketSize),y:Math.floor(e.y/this.bucketSize)}}}var E=({player:e,possibleMoves:t,occupiedCells:r})=>{const s=new A(12);r.toArray().forEach((({x:t,y:r,val:o})=>{o!==e&&s.increment(t,r)}));let n;if(s.getHighest()){n=t.sort(((e,t)=>{if(x[e.type]!==x[t.type])return x[t.type]-x[e.type];const r="PASS"===e.type?0:s.getScoreOfBucket(e.targetCell.coords)||0;return("PASS"===e.type?0:s.getScoreOfBucket(e.targetCell.coords)||0)-r}))[0],console.log("PICKED MOVE",n)}else n=o(t);return n||{type:"PASS"}};const S=document.getElementById("canvas"),C={players:[{color:"black",ai:m,cells:[e(20,20)]},{color:"pink",ai:f,cells:[e(15,15)]},{color:"cyan",ai:E,cells:[e(25,25)]}],camera:{origin:e(-100,-100),zoom:5},settings:{entropy:0}};setInterval((()=>l(C)),1);const w=()=>{u({canvas:S}),d({state:C,canvas:S}),requestAnimationFrame(w)};requestAnimationFrame(w),window.addEventListener("resize",(()=>{g(),u({canvas:S})})),g(),p(C,(()=>{u({canvas:S})}));
//# sourceMappingURL=index.5ba0efa4.js.map
